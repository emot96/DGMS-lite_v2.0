# Generated by Django 3.1.7 on 2021-05-19 17:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('account_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('account_name', models.CharField(blank=True, max_length=200, null=True)),
                ('account_email', models.CharField(blank=True, max_length=200, null=True)),
                ('account_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('account_addr', models.CharField(blank=True, max_length=500, null=True)),
                ('account_type', models.CharField(blank=True, max_length=20, null=True)),
                ('account_created_at', models.DateTimeField(blank=True, null=True)),
                ('account_updated_at', models.DateTimeField(blank=True, null=True)),
                ('account_archived', models.BooleanField(blank=True, null=True)),
                ('account_archived_at', models.DateTimeField(blank=True, null=True)),
                ('plan_id', models.IntegerField(blank=True, null=True)),
                ('plan_name', models.CharField(blank=True, max_length=20, null=True)),
                ('user_email', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alerts',
            fields=[
                ('alert_id', models.AutoField(primary_key=True, serialize=False)),
                ('alert_type_name', models.CharField(blank=True, max_length=50, null=True)),
                ('device_id', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_open', models.BooleanField(blank=True, null=True)),
                ('alert_level', models.CharField(blank=True, max_length=1, null=True)),
                ('param_value', models.FloatField(blank=True, null=True)),
                ('param_threshold_value', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alerts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlertType',
            fields=[
                ('alert_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('alert_type_name', models.CharField(blank=True, max_length=50, null=True)),
                ('alert_type_desc', models.CharField(blank=True, max_length=100, null=True)),
                ('alert_cat', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alert_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('device_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('device_name', models.CharField(blank=True, max_length=200, null=True)),
                ('device_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20, null=True)),
                ('account_id', models.CharField(blank=True, max_length=20, null=True)),
                ('device_rating', models.FloatField(blank=True, null=True)),
                ('device_location', models.CharField(blank=True, max_length=200, null=True)),
                ('device_status', models.CharField(blank=True, max_length=50, null=True)),
                ('device_created_at', models.DateTimeField(blank=True, null=True)),
                ('device_updated_at', models.DateTimeField(blank=True, null=True)),
                ('fuel_report_link', models.CharField(blank=True, max_length=200, null=True)),
                ('operational_report_link', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'device',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeviceOperational',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(blank=True, max_length=20, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('fuel_level', models.FloatField(blank=True, null=True)),
                ('unit_generated_kwh', models.FloatField(blank=True, null=True)),
                ('fuel_consumed', models.FloatField(blank=True, null=True)),
                ('energy_generated_kwh', models.FloatField(blank=True, null=True)),
                ('carbon_footprint', models.FloatField(blank=True, null=True)),
                ('fuel_cost', models.FloatField(blank=True, null=True)),
                ('per_unit_cost', models.FloatField(blank=True, null=True)),
                ('run_hours', models.FloatField(blank=True, null=True)),
                ('maximum_demand_load', models.FloatField(blank=True, null=True)),
                ('efficiency', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device_operational',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DevicesInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_header', models.CharField(blank=True, max_length=20, null=True)),
                ('device_id', models.CharField(blank=True, max_length=20, null=True)),
                ('device_time', models.DateTimeField()),
                ('gateway_device_battery', models.FloatField(blank=True, null=True)),
                ('room_temperature', models.FloatField(blank=True, null=True)),
                ('dg_battery_voltage', models.FloatField(blank=True, null=True)),
                ('gateway_power_status', models.IntegerField(blank=True, null=True)),
                ('gsm_signal', models.IntegerField(blank=True, null=True)),
                ('energy_output_kw_total', models.FloatField(blank=True, null=True)),
                ('kva_r_phase', models.FloatField(blank=True, null=True)),
                ('kva_y_phase', models.FloatField(blank=True, null=True)),
                ('kva_b_phase', models.FloatField(blank=True, null=True)),
                ('power_factor', models.FloatField(blank=True, null=True)),
                ('energy_output_kva', models.FloatField(blank=True, null=True)),
                ('vll_average', models.FloatField(blank=True, null=True)),
                ('vry_phase_voltage', models.FloatField(blank=True, null=True)),
                ('vyb_phase_voltage', models.FloatField(blank=True, null=True)),
                ('vbr_phase_voltage', models.FloatField(blank=True, null=True)),
                ('vln_average', models.FloatField(blank=True, null=True)),
                ('vr_phase_voltage', models.FloatField(blank=True, null=True)),
                ('vy_phase_voltage', models.FloatField(blank=True, null=True)),
                ('vb_phase_voltage', models.FloatField(blank=True, null=True)),
                ('current_average', models.FloatField(blank=True, null=True)),
                ('current_r_phase', models.FloatField(blank=True, null=True)),
                ('current_y_phase', models.FloatField(blank=True, null=True)),
                ('current_b_phase', models.FloatField(blank=True, null=True)),
                ('frequency', models.FloatField(blank=True, null=True)),
                ('unit_generated_kwh', models.FloatField(blank=True, null=True)),
                ('rpm', models.FloatField(blank=True, null=True)),
                ('dg_runtime_seconds', models.IntegerField(blank=True, null=True)),
                ('fuel_level_percentage', models.IntegerField(blank=True, null=True)),
                ('fuel_level_litre', models.IntegerField(blank=True, null=True)),
                ('fuel_level_volt', models.IntegerField(blank=True, null=True)),
                ('fuel_level_mm', models.IntegerField(blank=True, null=True)),
                ('rpm_ctrl', models.IntegerField(blank=True, null=True)),
                ('dg_counter_ctrl', models.IntegerField(blank=True, null=True)),
                ('runtime_second_ctrl', models.IntegerField(blank=True, null=True)),
                ('device_status', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'devices_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginCustomer',
            fields=[
                ('customer_name', models.CharField(db_column='Customer_Name', max_length=50)),
                ('customer_id', models.CharField(db_column='Customer_ID', max_length=100, primary_key=True, serialize=False)),
                ('email_id', models.CharField(db_column='Email_ID', max_length=50)),
                ('country', models.CharField(db_column='Country', max_length=30)),
                ('state', models.CharField(db_column='State', max_length=30)),
                ('city', models.CharField(db_column='City', max_length=30)),
                ('pincode', models.BigIntegerField(db_column='Pincode')),
                ('address', models.CharField(db_column='Address', max_length=200)),
                ('customer_photo', models.CharField(db_column='Customer_Photo', max_length=100)),
            ],
            options={
                'db_table': 'login_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginManager',
            fields=[
                ('manager_name', models.CharField(db_column='Manager_Name', max_length=50)),
                ('manager_email_id', models.CharField(db_column='Manager_Email_ID', max_length=50, primary_key=True, serialize=False)),
                ('mobile_no', models.CharField(db_column='Mobile_No', max_length=50)),
                ('contact_no', models.CharField(db_column='Contact_No', max_length=50)),
            ],
            options={
                'db_table': 'login_manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('is_customer', models.BooleanField()),
                ('is_manager', models.BooleanField()),
                ('is_user', models.BooleanField()),
            ],
            options={
                'db_table': 'login_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginUserDetail',
            fields=[
                ('user_name', models.CharField(db_column='User_Name', max_length=50)),
                ('contact_person', models.CharField(db_column='Contact_Person', max_length=50)),
                ('email_id', models.CharField(db_column='Email_ID', max_length=50)),
                ('contact1', models.CharField(db_column='Contact1', max_length=50)),
                ('contact2', models.CharField(db_column='Contact2', max_length=50)),
                ('device_id', models.CharField(db_column='Device_ID', max_length=50, primary_key=True, serialize=False)),
                ('location', models.CharField(db_column='Location', max_length=50)),
                ('country', models.CharField(db_column='Country', max_length=50)),
                ('state', models.CharField(db_column='State', max_length=30)),
                ('city', models.CharField(db_column='City', max_length=30)),
                ('pincode', models.BigIntegerField(db_column='Pincode')),
                ('address', models.CharField(db_column='Address', max_length=200)),
            ],
            options={
                'db_table': 'login_user_detail',
                'managed': False,
            },
        ),
    ]
